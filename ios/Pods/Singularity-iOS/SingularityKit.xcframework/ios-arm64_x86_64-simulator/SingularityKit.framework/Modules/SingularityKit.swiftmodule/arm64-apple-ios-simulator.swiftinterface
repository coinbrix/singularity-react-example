// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7.1 (swiftlang-5.7.1.135.3 clang-1400.0.29.51)
// swift-module-flags: -target arm64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name SingularityKit
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Foundation
import Swift
import UIKit
import WebKit
import _Concurrency
import _StringProcessing
@_hasMissingDesignatedInitializers public class SingularitySDKInitializer {
  public static func startLogin(on parentVC: UIKit.UIViewController, with params: [Swift.String : Any], listener: SingularityKit.SingularityListener)
  public static func startLogin(on parentVC: UIKit.UIViewController, with params: SingularityKit.SingularityParams?, listener: SingularityKit.SingularityListener)
  @objc deinit
}
public protocol SingularityListener {
  func onGetSingularityUserInfo(user: [Swift.String : Any])
  func onSingularityClose()
  func onSingularityLogout()
  func onSingularityError(message: Swift.String, code: Swift.Int)
}
public class SingularityParams {
  public init(merchantId: Swift.String, environment: SingularityKit.SingularityEnvironMent, merchantName: Swift.String? = nil, merchantLogo: UIKit.UIImage? = nil, primaryColor: UIKit.UIColor? = UIColor(red: 0.6784, green: 0.5412, blue: 0.7333, alpha: 1.0))
  @objc deinit
}
public enum SingularityEnvironMent : Swift.Int {
  case test
  case production
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
extension SingularityKit.SingularityEnvironMent : Swift.Equatable {}
extension SingularityKit.SingularityEnvironMent : Swift.Hashable {}
extension SingularityKit.SingularityEnvironMent : Swift.RawRepresentable {}
